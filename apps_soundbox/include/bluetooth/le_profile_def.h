

#include <stdint.h>
#include <sdk_cfg.h>
#if BT_BLE_WECHAT
const uint8_t profile_data[] = {
    // 0x0001 PRIMARY_SERVICE-0x1800
    0x0a, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x28, 0x00, 0x18,
    // 0x0002 CHARACTERISTIC-0x2A00-READ | WRITE| DYNAMIC
    0x0d, 0x00, 0x02, 0x00, 0x02, 0x00, 0x03, 0x28, 0x0a, 0x03, 0x00, 0x00, 0x2a,
    // 0x0003 VALUE-0x2A00-READ | WRITE| DYNAMIC-'57 65 63 68 61 74 42 6C 65'
    0x11, 0x00, 0x0a, 0x01, 0x03, 0x00, 0x00, 0x2a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x42, 0x6C, 0x65,
    // 0x0004 CHARACTERISTIC-0x2A01-READ
    0x0d, 0x00, 0x02, 0x00, 0x04, 0x00, 0x03, 0x28, 0x02, 0x05, 0x00, 0x01, 0x2a,
    // 0x0005 VALUE-0x2A01-READ-'34 12'
    0x0a, 0x00, 0x02, 0x00, 0x05, 0x00, 0x01, 0x2a, 0x34, 0x12,
    // 0x0006 CHARACTERISTIC-0x2A01-READ
    0x0d, 0x00, 0x02, 0x00, 0x06, 0x00, 0x03, 0x28, 0x02, 0x07, 0x00, 0x01, 0x2a,
    // 0x0007 VALUE-0x2A01-READ-'90 01 20 03 00 00 90 01'
    0x10, 0x00, 0x02, 0x00, 0x07, 0x00, 0x01, 0x2a, 0x90, 0x01, 0x20, 0x03, 0x00, 0x00, 0x90, 0x01,

    // 0x0008 PRIMARY_SERVICE-0x1801
    0x0a, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x28, 0x01, 0x18,
    // 0x0009 CHARACTERISTIC-0x2A05-INDICATE
    0x0d, 0x00, 0x02, 0x00, 0x09, 0x00, 0x03, 0x28, 0x20, 0x0a, 0x00, 0x05, 0x2a,
    // 0x000a VALUE-0x2A05-INDICATE-''
    0x08, 0x00, 0x20, 0x00, 0x0a, 0x00, 0x05, 0x2a,
    // 0x000b CLIENT_CHARACTERISTIC_CONFIGURATION
    0x0a, 0x00, 0x0a, 0x01, 0x0b, 0x00, 0x02, 0x29, 0x00, 0x00,
    // 0x000c CHARACTERISTIC-0x2A01-READ
    0x0d, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x03, 0x28, 0x02, 0x0d, 0x00, 0x01, 0x2a,
    // 0x000d VALUE-0x2A01-READ-'34 12'
    0x0a, 0x00, 0x02, 0x00, 0x0d, 0x00, 0x01, 0x2a, 0x34, 0x12,
    // 0x000e CHARACTERISTIC-0x2A01-READ
    0x0d, 0x00, 0x02, 0x00, 0x0e, 0x00, 0x03, 0x28, 0x02, 0x0f, 0x00, 0x01, 0x2a,
    // 0x000f VALUE-0x2A01-READ-'90 01 20 03 00 00 90 01'
    0x10, 0x00, 0x02, 0x00, 0x0f, 0x00, 0x01, 0x2a, 0x90, 0x01, 0x20, 0x03, 0x00, 0x00, 0x90, 0x01,

    // 0x0010 PRIMARY_SERVICE-0xFEE7
    0x0a, 0x00, 0x02, 0x00, 0x10, 0x00, 0x00, 0x28, 0xe7, 0xfe,
    // 0x0011 CHARACTERISTIC-0xFEC8-INDICATE
    0x0d, 0x00, 0x02, 0x00, 0x11, 0x00, 0x03, 0x28, 0x20, 0x12, 0x00, 0xc8, 0xfe,
    // 0x0012 VALUE-0xFEC8-INDICATE-''
    0x08, 0x00, 0x20, 0x00, 0x12, 0x00, 0xc8, 0xfe,
    // 0x0013 CLIENT_CHARACTERISTIC_CONFIGURATION
    0x0a, 0x00, 0x0a, 0x01, 0x13, 0x00, 0x02, 0x29, 0x00, 0x00,
    // 0x0014 CHARACTERISTIC-0xFEC7-WRITE| DYNAMIC
    0x0d, 0x00, 0x02, 0x00, 0x14, 0x00, 0x03, 0x28, 0x08, 0x15, 0x00, 0xc7, 0xfe,
    // 0x0015 VALUE-0xFEC7-WRITE| DYNAMIC-''
    0x08, 0x00, 0x08, 0x01, 0x15, 0x00, 0xc7, 0xfe,
    // 0x0016 CHARACTERISTIC-0xFEC9-READ
    0x0d, 0x00, 0x02, 0x00, 0x16, 0x00, 0x03, 0x28, 0x02, 0x17, 0x00, 0xc9, 0xfe,
    // 0x0017 VALUE-0xFEC9-READ-'D8 45 26 7B 90 EC'
    0x0e, 0x00, 0x02, 0x00, 0x17, 0x00, 0xc9, 0xfe, 0xD8, 0x45, 0x26, 0x7B, 0x90, 0xEC,
    // END
    0x00, 0x00,
}; // total size 149 bytes


//
// list mapping between characteristics and handles
//
#define ATT_CHARACTERISTIC_0x2A00_01_VALUE_HANDLE 0x0003
#define ATT_CHARACTERISTIC_0x2A01_01_VALUE_HANDLE 0x0005
#define ATT_CHARACTERISTIC_0x2A01_02_VALUE_HANDLE 0x0007
#define ATT_CHARACTERISTIC_0x2A05_01_VALUE_HANDLE 0x000a
#define ATT_CHARACTERISTIC_0x2A05_01_CLIENT_CONFIGURATION_HANDLE 0x000b
#define ATT_CHARACTERISTIC_0x2A01_03_VALUE_HANDLE 0x000d
#define ATT_CHARACTERISTIC_0x2A01_04_VALUE_HANDLE 0x000f
#define ATT_CHARACTERISTIC_0xFEC8_01_VALUE_HANDLE 0x0012
#define ATT_CHARACTERISTIC_0xFEC8_01_CLIENT_CONFIGURATION_HANDLE 0x0013
#define ATT_CHARACTERISTIC_0xFEC7_01_VALUE_HANDLE 0x0015
#define ATT_CHARACTERISTIC_0xFEC9_01_VALUE_HANDLE 0x0017


// DYNAMIC, read handle list
const uint16_t gatt_read_callback_handle_list[] = {
    ATT_CHARACTERISTIC_0x2A00_01_VALUE_HANDLE,
    // END
    0xffff
}; //0xffff is end

// DYNAMIC, write handle list
const uint16_t gatt_write_callback_handle_list[] = {
    ATT_CHARACTERISTIC_0x2A00_01_VALUE_HANDLE,
    ATT_CHARACTERISTIC_0x2A05_01_CLIENT_CONFIGURATION_HANDLE,
    ATT_CHARACTERISTIC_0xFEC8_01_CLIENT_CONFIGURATION_HANDLE,
    ATT_CHARACTERISTIC_0xFEC7_01_VALUE_HANDLE,
    // END
    0xffff
};//0xffff is endconst




u8 profile_adv_ind_data[31] = {
    0x02, 0x01, 0x06,
    0x03, 0x03, 0xE7, 0xFE,
    0x09, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00,
};
//31bytes
//len,type, Manufacturer Specific data
#define GAP_NAME_ADV_SIZE   0x12
static u8 profile_scan_rsp_data[31] = {
    0x09, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00,
    GAP_NAME_ADV_SIZE, 0x09, 'b', 'l', 'e', 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00,
};
#else
const uint8_t profile_data[] = {
    0x0a, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x28, 0x00, 0x18,
    0x0d, 0x00, 0x02, 0x00, 0x02, 0x00, 0x03, 0x28, 0x02, 0x03, 0x00, 0x00, 0x2a,
    0x14, 0x00, 0x02, 0x01, 0x03, 0x00, 0x00, 0x2a, 0x42, 0x52, 0x31, 0x36, 0x5f, 0x42, 0x4c, 0x45, 0x5f, 0x41, 0x50, 0x50,

    0x0a, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x28, 0x01, 0x18,
    0x0d, 0x00, 0x02, 0x00, 0x05, 0x00, 0x03, 0x28, 0x02, 0x06, 0x00, 0x05, 0x2a,
    0x08, 0x00, 0x02, 0x00, 0x06, 0x00, 0x05, 0x2a,

    0x0a, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, 0x28, 0x00, 0xae,
    0x0d, 0x00, 0x02, 0x00, 0x08, 0x00, 0x03, 0x28, 0x04, 0x09, 0x00, 0x01, 0xae,
    0x08, 0x00, 0x04, 0x01, 0x09, 0x00, 0x01, 0xae,
    0x0d, 0x00, 0x02, 0x00, 0x0a, 0x00, 0x03, 0x28, 0x10, 0x0b, 0x00, 0x02, 0xae,
    0x08, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x02, 0xae,
    0x0a, 0x00, 0x0a, 0x01, 0x0c, 0x00, 0x02, 0x29, 0x00, 0x00,
    // END
    0x00, 0x00,
}; // total size 84 bytes


//
// list mapping between characteristics and handles
//
#define ATT_CHARACTERISTIC_GAP_DEVICE_NAME_01_VALUE_HANDLE 0x0003
#define ATT_CHARACTERISTIC_GATT_SERVICE_CHANGED_01_VALUE_HANDLE 0x0006
#define ATT_CHARACTERISTIC_ae01_01_VALUE_HANDLE 0x0009
#define ATT_CHARACTERISTIC_ae02_01_VALUE_HANDLE 0x000b
#define ATT_CHARACTERISTIC_ae02_01_CLIENT_CONFIGURATION_HANDLE 0x000c


// DYNAMIC, read handle list
const uint16_t gatt_read_callback_handle_list[] = {
    // END
    0xffff
}; //0xffff is end

// DYNAMIC, write handle list
const uint16_t gatt_write_callback_handle_list[] = {
    ATT_CHARACTERISTIC_ae01_01_VALUE_HANDLE,
    ATT_CHARACTERISTIC_ae02_01_CLIENT_CONFIGURATION_HANDLE,
    // END
    0xffff
};//0xffff is end

#if (PHONESEARCHHIDEBLE == 0)
static const u8 profile_adv_ind_data[31] = {
    0x02, 0x01, 0x06,
    0x04, 0x0d, 0x00, 0x05, 0x10,
    0x03, 0x03, 0x0d, 0x18,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00,

};
#else
static const u8 profile_adv_ind_data[31] = {
    0x02, 0x01, 0x0A,
    0x03, 0x03, 0x66, 0x66,
    0x03, 0x19, 0xD0, 0x07,
    0x09, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,

};
#endif
//31bytes
//len,type, Manufacturer Specific data
#define GAP_NAME_ADV_SIZE   0x12
static u8 profile_scan_rsp_data[31] = {
    0x09, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00,
    GAP_NAME_ADV_SIZE, 0x09, 'b', 'l', 'e', 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00,
};
#endif

